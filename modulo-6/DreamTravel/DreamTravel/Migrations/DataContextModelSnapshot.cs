// <auto-generated />
using System;
using DreamTravel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DreamTravel.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DreamTravel.Models.CompanhiaAerea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("companhia_aerea");
                });

            modelBuilder.Entity("DreamTravel.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("imagem");

                    b.Property<bool>("Internacional")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("internacional");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("localizacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<double>("PrecoMedio")
                        .HasColumnType("double")
                        .HasColumnName("preco_medio");

                    b.HasKey("Id");

                    b.ToTable("destino");
                });

            modelBuilder.Entity("DreamTravel.Models.Passagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CompanhiaAereaId")
                        .HasColumnType("int")
                        .HasColumnName("fk_companhia_aerea_id");

                    b.Property<DateTime>("DataPartida")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_partida");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int")
                        .HasColumnName("fk_destino_id");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("origem");

                    b.Property<int?>("PromocaoId")
                        .HasColumnType("int")
                        .HasColumnName("fk_promocao_id");

                    b.HasKey("Id");

                    b.HasIndex("CompanhiaAereaId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("PromocaoId");

                    b.ToTable("passagem");
                });

            modelBuilder.Entity("DreamTravel.Models.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_termino");

                    b.Property<double>("Desconto")
                        .HasColumnType("double")
                        .HasColumnName("desconto");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int")
                        .HasColumnName("fk_destino_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.ToTable("promocao");
                });

            modelBuilder.Entity("DreamTravel.Models.Passagem", b =>
                {
                    b.HasOne("DreamTravel.Models.CompanhiaAerea", "CompanhiaAerea")
                        .WithMany()
                        .HasForeignKey("CompanhiaAereaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamTravel.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamTravel.Models.Promocao", "Promocao")
                        .WithMany()
                        .HasForeignKey("PromocaoId");

                    b.Navigation("CompanhiaAerea");

                    b.Navigation("Destino");

                    b.Navigation("Promocao");
                });

            modelBuilder.Entity("DreamTravel.Models.Promocao", b =>
                {
                    b.HasOne("DreamTravel.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });
#pragma warning restore 612, 618
        }
    }
}
